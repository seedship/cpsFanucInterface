PROGRAM main

%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%NOBUSYLAMP

%INCLUDE types

VAR
	connFile : FILE
	pipeFile : FILE
	STATUS : INTEGER
	fetched_picking_point: object_position

	-- only for debug
	cur_pos : XYZWPR

%INCLUDE console/print_utils
%INCLUDE parsers/position_parser
%INCLUDE socket/socket_utils
%INCLUDE motion/motion_utils
%INCLUDE gripper/gripper-utils
   
BEGIN
	connectServ('C3:')
	STATUS  = requestData('PIP:read.dt')
	checkError('requestData', STATUS)
	CLOSE FILE connFile

	-- debug printing the saved pipeFile
	OPEN FILE pipeFile('RO', 'PIP:read.dt')
	STATUS = IO_STATUS(pipeFile)
	checkError('Open pipeFile', STATUS)
	
	SET_FILE_ATR(pipeFile, ATR_PIPWAIT, WAIT_USED) -- force READS to wait
	SET_FILE_ATR(pipeFile, ATR_TIMEOUT, (1*1000))  -- READs timeout after 1*1000ms
	
	fetched_picking_point = parsePosition(pipeFile)
	WRITE('fetched_picking_point ', fetched_picking_point.coordinates, CR)

	STATUS = startMotionListener
	checkError('Start Motion Listener', STATUS)

	--fetched_picking_point.coordinates.x = 500
	updatePositionTarget(fetched_picking_point.coordinates)
	
	DELAY(5000)
	openGripper
	DELAY(1000)
	closeGripper
	
	
	fetched_picking_point.coordinates.x = 453
	fetched_picking_point.coordinates.y = -2
	fetched_picking_point.coordinates.z = 206
	fetched_picking_point.coordinates.w = 180
	fetched_picking_point.coordinates.p = 2
	fetched_picking_point.coordinates.r = 0
	updatePositionTarget(fetched_picking_point.coordinates)
	DELAY(5000)
	
	STATUS = stopMotionListener
	checkError('Stop Motion Listener', STATUS)

	-- parseMultiplePickingPositions(pipeFile)
	MSG_DISCO('C3:', STATUS)

END main
